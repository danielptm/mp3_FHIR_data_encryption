package com.encryption.demo;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.PrivateKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.util.UUID;

public class EncryptionServiceTest {


    @Test
    public void test() throws Exception {
        EncryptionService encryptionService = new EncryptionService();
        KeyPair keyPair = EncryptionService.generateKeyPair();


        String myText = "abcd";

        String encrypted = encryptionService.encrypt(myText, keyPair.getPublic());


        PKCS8EncodedKeySpec priPKCS8 = new PKCS8EncodedKeySpec(keyPair.getPrivate().getEncoded());
        KeyFactory keyf = KeyFactory.getInstance("RSA");
        PrivateKey priKey = keyf.generatePrivate(priPKCS8);


        String decrypted = encryptionService.decrypt(encrypted, priKey);

        System.out.println("MyText");
        System.out.println(myText);

        System.out.println("Encrypted:");
        System.out.println(encrypted);


        System.out.println("Decrypted:");
        System.out.println(decrypted);

    }

    @Test
    public void testEncryptChunks() throws Exception {
        // 300 As
        String text = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
        KeyPair keyPair = EncryptionService.generateKeyPair();
        String result = EncryptionService.encryptChunks(text, keyPair);
        String decrypted = EncryptionService.decryptChunks(result, keyPair);

        Assertions.assertEquals(text, decrypted);

    }

    @Test
    public void testEncryptDecrypt() {
        String text

        String key = UUID.randomUUID().toString().substring(0, 16);
        String encrypted = EncryptionService.aesEncrypt(text, key);
        String decrypted = EncryptionService.aesDecrypt(encrypted, key);

        Assertions.assertEquals(text, decrypted);
    }
}
